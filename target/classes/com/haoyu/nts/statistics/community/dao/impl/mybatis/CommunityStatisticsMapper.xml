<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haoyu.nts.statistics.community.dao.impl.mybatis.CommunityStatisticsMapper" >
	<resultMap type="com.haoyu.nts.statistics.community.entity.CommunityStatistics" id="Baseresult">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="PROJECT_NAME" property="train.project.name" jdbcType="VARCHAR" />
		<result column="TRAIN_NAME" property="train.name" jdbcType="VARCHAR" />
		<result column="TRAIN_ID" property="train.id" jdbcType="VARCHAR" />
		<result column="TRAINING_TIME_START" property="trainingTime.startTime" jdbcType="TIMESTAMP" />
		<result column="TRAINING_TIME_END" property="trainingTime.endTime" jdbcType="TIMESTAMP" />
		<result column="DISCUSSION_NUM" property="discussionNum" jdbcType="INTEGER" />
      	<result column="LESSON_NUM" property="lessonNum" jdbcType="INTEGER" />
      	<result column="MOVEMENT_NUM" property="movementNum" jdbcType="INTEGER" />
      	<result column="TRAIN_HEADCOUNT" property="trainHeadcount" jdbcType="INTEGER" />
      	<result column="PASS_HEADCOUNT" property="passHeadcount" jdbcType="INTEGER" />
      	
      	<result column="USER_ID" property="userInfo.id" jdbcType="VARCHAR" />
      	<result column="USER_NAME" property="userInfo.realName" jdbcType="VARCHAR" />
      	<result column="PAPERWORK_NO" property="userInfo.paperworkNo" jdbcType="VARCHAR" />
      	<result column="DEPT_NAME" property="userInfo.department.deptName" jdbcType="VARCHAR" />
      	<result column="SIGN_NUM" property="signStat.signNum" jdbcType="VARCHAR" />
      	<result column="SCORE" property="score" jdbcType="INTEGER" />
      	<result column="USER_SCORE" property="userScore" jdbcType="INTEGER" />
      	<result column="STATE" property="state" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="selectByParameter" parameterType="map" resultMap="Baseresult">
		select
			CRN.ID,
			P.NAME PROJECT_NAME,
			T.ID TRAIN_ID,
			T.NAME TRAIN_NAME,
			CRN.START_TIME TRAINING_TIME_START,
			CRN.END_TIME TRAINING_TIME_END,
			(
				select
					count(BUV.ID)
				from
					BASE_USER_VIEW BUV 
				where 
					exists(
						select 
							1 
						from 
							DISCUSSION D 
						inner join DISCUSSION_RELATION DRN on DRN.IS_DELETED = 'N' and DRN.RELATION_ID = 'cmts' and (DRN.RELATION_TYPE = 'discussion' or DRN.RELATION_TYPE = 'lesson')
						where 
							D.IS_DELETED = 'N' and D.CREATOR = BUV.ID
					)
					or exists(
						select 
							1 
						from 
							MOVEMENT M
						inner join MOVEMENT_RELATION MRN on MRN.MOVEMENT_ID = M.ID and MRN.RELATION_ID = 'cmts' and MRN.RELATION_TYPE = 'movement' and MRN.IS_DELETED = 'N' 
						where
							BUV.ID = M.CREATOR and M.IS_DELETED = 'N'
					)
			) TRAIN_HEADCOUNT,
			(
				select
					count(CRT.ID)
				from
					COMMUNITY_RESULT CRT
				where
					CRT.STATE = 'passed' and CRT.IS_DELETED = 'N' and CRT.RELATION_ID = CRN.RELATION_ID
			) PASS_HEADCOUNT,
			(
				select
					count(D.ID)
				from
					DISCUSSION D 
				where
					D.IS_DELETED = 'N' and D.CREATE_TIME <![CDATA[ >= ]]> ${date_to_long_prefix} CRN.START_TIME ${date_to_long_suffix} and D.CREATE_TIME <![CDATA[ <= ]]> ${date_to_long_prefix} CRN.END_TIME ${date_to_long_suffix}
					and exists(select 1 from DISCUSSION_RELATION DRN where DRN.IS_DELETED = 'N' and DRN.RELATION_ID = 'cmts' and DRN.RELATION_TYPE = 'discussion')
					and exists(select 1 from TRAIN_REGISTER TRR where TRR.IS_DELETED = 'N' and D.CREATOR = TRR.USER_ID and TRR.STATE = 'pass' and TRR.TRAIN_ID = T.ID)
			) DISCUSSION_NUM,
			(
				select
					count(D.ID)
				from
					DISCUSSION D 
				where
					D.IS_DELETED = 'N' and D.CREATE_TIME <![CDATA[ >= ]]> ${date_to_long_prefix} CRN.START_TIME ${date_to_long_suffix} and D.CREATE_TIME <![CDATA[ <= ]]> ${date_to_long_prefix} CRN.END_TIME ${date_to_long_suffix}
					and exists(select 1 from DISCUSSION_RELATION DRN where DRN.IS_DELETED = 'N' and DRN.RELATION_ID = 'cmts' and DRN.RELATION_TYPE = 'lesson')
					and exists(select 1 from TRAIN_REGISTER TRR where TRR.IS_DELETED = 'N' and D.CREATOR = TRR.USER_ID and TRR.STATE = 'pass' and TRR.TRAIN_ID = T.ID)
			) LESSON_NUM,
			(
				select
					count(M.ID)
				from
					MOVEMENT M
				inner join MOVEMENT_RELATION MRN on MRN.MOVEMENT_ID = M.ID and MRN.RELATION_ID = 'cmts' and MRN.RELATION_TYPE = 'movement' and MRN.IS_DELETED = 'N' 
				where 
					M.IS_DELETED = 'N' and M.CREATE_TIME <![CDATA[ >= ]]> ${date_to_long_prefix} CRN.START_TIME ${date_to_long_suffix} and M.CREATE_TIME <![CDATA[ <= ]]> ${date_to_long_prefix} CRN.END_TIME ${date_to_long_suffix}
					and exists(select 1 from TRAIN_REGISTER TRR where TRR.IS_DELETED = 'N' and M.CREATOR = TRR.USER_ID and TRR.STATE = 'pass' and TRR.TRAIN_ID = T.ID)
			) MOVEMENT_NUM
		from
			COMMUNITY_RELATION CRN
		inner join TRAIN　T on CRN.RELATION_ID　= T.ID and T.IS_DELETED = 'N' 
		inner join PROJECT P on P.ID = T.PROJECT_ID and P.IS_DELETED = 'N' 
		where
			CRN.IS_DELETED = 'N' 
		<if test=" trainName != null and trainName != ''">
			and T.NAME like '%${trainName}%'
		</if>
		<if test=" projectId != null and projectId != ''">
			and T.PROJECT_ID = #{projectId,jdbcType=VARCHAR}
		</if>
		<if test="startTimeLessThanOrEquals != null">
			and CRN.START_TIME <![CDATA[<=]]>  #{stateStartTimeLessThanOrEquals,jdbcType=TIMESTAMP}
		</if>
		<if test="endTimeGreaterThanOrEquals != null">
			and CRN.END_TIME <![CDATA[>=]]>  #{stateEndTimeGreaterThanOrEquals,jdbcType=TIMESTAMP}
		</if>
	</select>    
	
	<select id="selectStudentByParameter" parameterType="map" resultMap="Baseresult">
	    select
	    	BUV.ID USER_ID,
			BUV.REAL_NAME USER_NAME,
			BUV.PAPERWORK_NO PAPERWORK_NO,
			BUV.DEPT_NAME,
			SS.SIGN_NUM,
			(
				select
					count (D.ID)
				from
					DISCUSSION D
				where
					D.CREATOR = BUV.ID and D .IS_DELETED = 'N'
				and exists (
					select
						1
					from
						DISCUSSION_RELATION DR
					where
						D.ID = DR.DISCUSSION_ID and DR.RELATION_ID = 'cmts' and DR.RELATION_TYPE = 'discussion'
				)
			) DISCUSSION_NUM,
			(
				select 
					count(D.ID) 
				from 
					DISCUSSION D 
				where 
					D.CREATOR = BUV.ID and D.IS_DELETED = 'N' 
					and exists (select 1 from DISCUSSION_RELATION DR where D.ID = DR.DISCUSSION_ID and DR.RELATION_ID = 'cmts' and DR.RELATION_TYPE = 'lesson' )
			) LESSON_NUM,
			(
				select
					count(MRR.ID)
				from
					MOVEMENT_REGISTER MRR
				where
					MRR.IS_DELETED = 'N' and MRR.CREATOR = BUV.ID
			) MOVEMENT_NUM,
			CRN.SCORE SCORE,
			CRT.SCORE USER_SCORE,
			CRT.STATE
		from
			TRAIN_REGISTER TRR
		inner join BASE_USER_VIEW BUV ON TRR.USER_ID = BUV.ID
		left join SIGN_STAT SS on SS.CREATOR = TRR.USER_ID and SS.IS_DELETED = 'N'
		left join COMMUNITY_RESULT CRT on TRR.TRAIN_ID = CRT.RELATION_ID and TRR.USER_ID = CRT.USER_ID and CRT.IS_DELETED = 'N'
		left join COMMUNITY_RELATION CRN on CRN.RELATION_ID = TRR.TRAIN_ID and CRN.IS_DELETED = 'N'
		where
			TRR.IS_DELETED = 'N'
		<if test=" trainId != null and trainId != ''"> 
			and TRR.TRAIN_ID = #{trainId,jdbcType=VARCHAR}
		</if>
		<if test=" deptName != null and deptName != ''"> 
			and BUV.DEPT_NAME like '%${deptName}%'
		</if>
	</select>    
</mapper>